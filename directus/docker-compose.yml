services:
  database:
    container_name: database

    image: postgis/postgis

    volumes:
      - rts_directus_db_volume:/var/lib/postgresql/data
      - ./data/backup:/var/lib/postgresql/backup

    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U rts_directus']
      interval: 1s
      timeout: 1s
      retries: 30

    environment:
      POSTGRES_USER: 'rts_directus'
      POSTGRES_PASSWORD: 'rts_directus'
      POSTGRES_DB: 'rts_directus'

    depends_on:
      - cache

  cache:
    container_name: cache

    image: redis

  directus:
    container_name: directus

    build: .

    ports:
      - 8080:8055

    command: sh -c "npm exec directus bootstrap; npx directus schema apply --yes ./schema/snapshot.yaml; npm exec directus start"

    volumes:
      - ./uploads:/directus/uploads
      - ./schema:/directus/schema
      - ./extensions:/directus/extensions
      - ./logs:/directus/logs

    depends_on:
      database:
        condition: service_healthy

    environment:
      KEY: '29a89721-46e0-4d85-a7b8-1e1097a70feb'
      SECRET: '9e8bce1b-c54d-4281-99fb-0e00d8cc2516'

      DB_CLIENT: 'pg'
      DB_HOST: 'database'
      DB_PORT: '5432'
      DB_DATABASE: 'rts_directus'
      DB_USER: 'rts_directus'
      DB_PASSWORD: 'rts_directus'

      CACHE_ENABLED: 'true'
      CACHE_STORE: 'redis'
      CACHE_REDIS: 'redis://cache:6379'

      LOG_LEVEL: 'warn'

      ADMIN_EMAIL: 'admin@example.com'
      ADMIN_PASSWORD: 'd1r3ctu5'

      WEBSOCKETS_ENABLED: 'true'
      REDIS_HOST: 'cache'
      REDIS_PORT: '6379'
      RATE_LIMITER_STORE: 'redis'
      SYNCHRONIZATION_STORE: 'redis'
      MESSENGER_STORE: 'redis'

    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8055/admin || exit 1
      interval: 1s
      timeout: 1s
      retries: 30
      start_period: 1s

volumes:
  rts_directus_db_volume:
    external: true
