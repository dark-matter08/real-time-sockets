services:
  middleware:
    container_name: middleware
    build:
      context: ./middleware
      dockerfile: Dockerfile
    restart: unless-stopped
    command: sh -c "wait && npm run dev"
    volumes:
      - ./middleware/src:/app/src
      - ./middleware/tsconfig.json:/app/tsconfig.json
      - ./middleware/tsoa.json:/app/tsoa.json
      - ./middleware/jest.config.ts:/app/jest.config.ts
    environment:
      PORT: 8000
      DIRECTUS_ENDPOINT: 'http://directus:8055/'
      DIRECTUS_PORTAL: 'https://localhost:8055/'
      DIRECUTS_TOKEN: 'XXX'
      DIRECTUS_USER: 'admin@example.com'
      DIRECTUS_PASSWORD: 'd1r3ctu5'
      JWT_SECRET: 'this-may-change'
      SESSION_SECRET: 'hallal-change'
      EMAIL_SMTP_HOST: smtp.gmail.com
      EMAIL_SMTP_PORT: 465
      EMAIL_SMTP_USER: ntopor.inc@gmail.com
      EMAIL_SMTP_PASSWORD: ayzropyditaaiexj
      EMAIL_SMTP_SECURE: true
      EMAIL_OTP_SUBJECT: 'RTS OTP'
      EMAIL_FROM: ntopor.inc@gmail.com
    ports:
      - 8000:8000
    stdin_open: true
    tty: true
    depends_on:
      directus:
        condition: service_healthy

  database:
    container_name: database

    image: postgis/postgis

    volumes:
      - rts_directus_db_volume:/var/lib/postgresql/data
      - ./directus/data/backup:/var/lib/postgresql/backup

    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U rts_directus']
      interval: 1s
      timeout: 1s
      retries: 30

    environment:
      POSTGRES_USER: 'rts_directus'
      POSTGRES_PASSWORD: 'rts_directus'
      POSTGRES_DB: 'rts_directus'

    depends_on:
      - cache

  cache:
    container_name: cache

    image: redis

  directus:
    container_name: directus
    build: ./directus
    ports:
      - 8080:8055

    command: sh -c "npm exec directus bootstrap; npx directus schema apply --yes ./schema/snapshot.yaml; npm exec directus start"

    volumes:
      - ./directus/uploads:/directus/uploads
      - ./directus/schema:/directus/schema
      - ./directus/extensions:/directus/extensions
      - ./directus/logs:/directus/logs

    depends_on:
      database:
        condition: service_healthy

    environment:
      KEY: '29a89721-46e0-4d85-a7b8-1e1097a70feb'
      SECRET: '9e8bce1b-c54d-4281-99fb-0e00d8cc2516'

      DB_CLIENT: 'pg'
      DB_HOST: 'database'
      DB_PORT: '5432'
      DB_DATABASE: 'rts_directus'
      DB_USER: 'rts_directus'
      DB_PASSWORD: 'rts_directus'

      CACHE_ENABLED: 'true'
      CACHE_STORE: 'redis'
      CACHE_REDIS: 'redis://cache:6379'

      LOG_LEVEL: 'warn'

      ADMIN_EMAIL: 'admin@example.com'
      ADMIN_PASSWORD: 'd1r3ctu5'

      WEBSOCKETS_ENABLED: 'true'
      REDIS_HOST: 'cache'
      REDIS_PORT: '6379'
      RATE_LIMITER_STORE: 'redis'
      SYNCHRONIZATION_STORE: 'redis'
      MESSENGER_STORE: 'redis'

    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8055/admin || exit 1
      interval: 1s
      timeout: 1s
      retries: 30
      start_period: 1s

volumes:
  rts_directus_db_volume:
    external: true
